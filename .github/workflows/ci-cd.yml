name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: tecnofit
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: pdo, pdo_mysql
        coverage: xdebug

    - name: Install Composer dependencies
      run: |
        composer update
        composer install --prefer-dist --no-progress

    - name: Wait for MySQL
      run: |
        timeout=300
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" -u"root" -p"root" --silent; do
          echo "Waiting for MySQL to be ready..."
          sleep 2
          timeout=$((timeout - 2))
          if [ $timeout -le 0 ]; then
            echo "Timeout waiting for MySQL"
            exit 1
          fi
        done

    - name: Run database migrations
      run: composer migrate
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: tecnofit
        DB_USER: root
        DB_PASS: root
        DB_PORT: 3306
      timeout-minutes: 5
      if: always()

    - name: Run tests with coverage
      run: vendor/bin/phpunit --coverage-clover coverage.xml
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: tecnofit
        DB_USER: root
        DB_PASS: root
        DOCKER: false

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml

  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse src tests --level=5 --error-format=github

    - name: Run PHP_CodeSniffer
      run: vendor/bin/phpcs src tests --standard=PSR12

  deploy:
    needs: [test, static-analysis]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Deploy to production
      run: |
        echo "Deploy"